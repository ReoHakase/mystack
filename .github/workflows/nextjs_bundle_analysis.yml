# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

name: 'Next.js Bundle Analysis'

on:
  pull_request:
  push:
    branches:
      - main # change this if your default branch is named differently
  workflow_dispatch:

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

defaults:
  run:
    # NOTE: Use root directory for monorepos using Turborepo since the build process is made to be run from the root directory
    working-directory: .

permissions:
  contents: read # For checkout repository
  actions: read # For fetching base branch bundle stats
  pull-requests: write # For comments

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          # The action will look for `volta.node` first. If `volta.node` isn't defined, then it will look for `engines.node`
          # Refer: https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#node-version-file
          node-version-file: 'package.json'

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.4.0
        id: pnpm-install
        with:
          # Version of pnpm to install:
          # Optional when there is a packageManager field in the package.json.
          # Refer: https://github.com/pnpm/action-setup#inputs
          run_install: false

      - name: Get PNPM store
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup PNPM cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Build with Turbo (Only `apps/web`)
        run: pnpm turbo build --filter web 

      # Here's the first place where next-bundle-analysis' own script is used
      # This step pulls the raw bundle stats for the current bundle
      - name: Analyze bundle
        working-directory: ./apps/web
        run: pnpm --package=nextjs-bundle-analysis dlx report

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: apps/web/.next/analyze/__bundle_analysis.json

      - name: Download base branch bundle stats
        uses: dawidd6/action-download-artifact@v2
        if: success() && github.event.number
        with:
          workflow: nextjs_bundle_analysis.yml
          branch: ${{ github.event.pull_request.base.ref }}
          path: apps/web/.next/analyze/base

      # And here's the second place - this runs after we have both the current and
      # base branch bundle stats, and will compare them to determine what changed.
      # There are two configurable arguments that come from package.json:
      #
      # - budget: optional, set a budget (bytes) against which size changes are measured
      #           it's set to 350kb here by default, as informed by the following piece:
      #           https://infrequently.org/2021/03/the-performance-inequality-gap/
      #
      # - red-status-percentage: sets the percent size increase where you get a red
      #                          status indicator, defaults to 20%
      #
      # Either of these arguments can be changed or removed by editing the `nextBundleAnalysis`
      # entry in your package.json file.
      - name: Compare with base branch bundle
        working-directory: ./apps/web
        if: success() && github.event.number
        run: ls -laR .next/analyze/base && pnpm --package=nextjs-bundle-analysis dlx compare

      - name: Get Comment Body
        id: get-comment-body
        working-directory: ./apps/web
        if: success() && github.event.number
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        run: |
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$(cat .next/analyze/__bundle_analysis_comment.txt)" >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '<!-- __NEXTJS_BUNDLE -->'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number && steps.fc.outputs.comment-id == 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number && steps.fc.outputs.comment-id != 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
